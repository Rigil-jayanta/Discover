#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demoapp1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iViews")]
	public partial class iViewsDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBudget(Budget instance);
    partial void UpdateBudget(Budget instance);
    partial void DeleteBudget(Budget instance);
    partial void InsertBudgetItem(BudgetItem instance);
    partial void UpdateBudgetItem(BudgetItem instance);
    partial void DeleteBudgetItem(BudgetItem instance);
    partial void InsertBudgetDetail(BudgetDetail instance);
    partial void UpdateBudgetDetail(BudgetDetail instance);
    partial void DeleteBudgetDetail(BudgetDetail instance);
    #endregion
		
		public iViewsDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["iViewsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public iViewsDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iViewsDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iViewsDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public iViewsDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vw_Budget_Report> vw_Budget_Reports
		{
			get
			{
				return this.GetTable<vw_Budget_Report>();
			}
		}
		
		public System.Data.Linq.Table<Budget> Budgets
		{
			get
			{
				return this.GetTable<Budget>();
			}
		}
		
		public System.Data.Linq.Table<BudgetItem> BudgetItems
		{
			get
			{
				return this.GetTable<BudgetItem>();
			}
		}
		
		public System.Data.Linq.Table<BudgetDetail> BudgetDetails
		{
			get
			{
				return this.GetTable<BudgetDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Budget_Report")]
	public partial class vw_Budget_Report
	{
		
		private string _SU;
		
		private string _WBName;
		
		private string _Year;
		
		private int _BIRID;
		
		private string _ProgramName;
		
		private int _BFTId;
		
		private int _BudgetId;
		
		private string _Description;
		
		private System.Nullable<double> _Amount;
		
		private int _ExpenseTypeId;
		
		private string _ExpenseType;
		
		private int _MetaDataId;
		
		private string _OtherData;
		
		private string _OtherDataValue;
		
		private System.Nullable<int> _BIExpType;
		
		public vw_Budget_Report()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SU", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SU
		{
			get
			{
				return this._SU;
			}
			set
			{
				if ((this._SU != value))
				{
					this._SU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WBName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WBName
		{
			get
			{
				return this._WBName;
			}
			set
			{
				if ((this._WBName != value))
				{
					this._WBName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(MAX)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIRID", DbType="Int NOT NULL")]
		public int BIRID
		{
			get
			{
				return this._BIRID;
			}
			set
			{
				if ((this._BIRID != value))
				{
					this._BIRID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this._ProgramName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BFTId", DbType="Int NOT NULL")]
		public int BFTId
		{
			get
			{
				return this._BFTId;
			}
			set
			{
				if ((this._BFTId != value))
				{
					this._BFTId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="Int NOT NULL")]
		public int BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					this._BudgetId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseTypeId", DbType="Int NOT NULL")]
		public int ExpenseTypeId
		{
			get
			{
				return this._ExpenseTypeId;
			}
			set
			{
				if ((this._ExpenseTypeId != value))
				{
					this._ExpenseTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ExpenseType
		{
			get
			{
				return this._ExpenseType;
			}
			set
			{
				if ((this._ExpenseType != value))
				{
					this._ExpenseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDataId", DbType="Int NOT NULL")]
		public int MetaDataId
		{
			get
			{
				return this._MetaDataId;
			}
			set
			{
				if ((this._MetaDataId != value))
				{
					this._MetaDataId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherData", DbType="NVarChar(MAX)")]
		public string OtherData
		{
			get
			{
				return this._OtherData;
			}
			set
			{
				if ((this._OtherData != value))
				{
					this._OtherData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDataValue", DbType="NVarChar(MAX)")]
		public string OtherDataValue
		{
			get
			{
				return this._OtherDataValue;
			}
			set
			{
				if ((this._OtherDataValue != value))
				{
					this._OtherDataValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIExpType", DbType="Int")]
		public System.Nullable<int> BIExpType
		{
			get
			{
				return this._BIExpType;
			}
			set
			{
				if ((this._BIExpType != value))
				{
					this._BIExpType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budget")]
	public partial class Budget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _UniqueCode;
		
		private System.Nullable<int> _Code;
		
		private int _BudgetVersionId;
		
		private int _OrganizationUnitId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<int> _FundTypeId;
		
		private System.Nullable<int> _CostCenterId;
		
		private System.Nullable<int> _RoutingCodeId;
		
		private string _Initiative;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<decimal> _FedEmployeeCount;
		
		private System.Nullable<decimal> _ContractorCount;
		
		private string _Impact;
		
		private string _AddtionalNote;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private int _OldId;
		
		private System.Nullable<double> _Amount;
		
		private EntitySet<BudgetItem> _BudgetItems;
		
		private EntitySet<BudgetDetail> _BudgetDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUniqueCodeChanging(string value);
    partial void OnUniqueCodeChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnBudgetVersionIdChanging(int value);
    partial void OnBudgetVersionIdChanged();
    partial void OnOrganizationUnitIdChanging(int value);
    partial void OnOrganizationUnitIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnFundTypeIdChanging(System.Nullable<int> value);
    partial void OnFundTypeIdChanged();
    partial void OnCostCenterIdChanging(System.Nullable<int> value);
    partial void OnCostCenterIdChanged();
    partial void OnRoutingCodeIdChanging(System.Nullable<int> value);
    partial void OnRoutingCodeIdChanged();
    partial void OnInitiativeChanging(string value);
    partial void OnInitiativeChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnFedEmployeeCountChanging(System.Nullable<decimal> value);
    partial void OnFedEmployeeCountChanged();
    partial void OnContractorCountChanging(System.Nullable<decimal> value);
    partial void OnContractorCountChanged();
    partial void OnImpactChanging(string value);
    partial void OnImpactChanged();
    partial void OnAddtionalNoteChanging(string value);
    partial void OnAddtionalNoteChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnOldIdChanging(int value);
    partial void OnOldIdChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    #endregion
		
		public Budget()
		{
			this._BudgetItems = new EntitySet<BudgetItem>(new Action<BudgetItem>(this.attach_BudgetItems), new Action<BudgetItem>(this.detach_BudgetItems));
			this._BudgetDetails = new EntitySet<BudgetDetail>(new Action<BudgetDetail>(this.attach_BudgetDetails), new Action<BudgetDetail>(this.detach_BudgetDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueCode", DbType="NVarChar(MAX)")]
		public string UniqueCode
		{
			get
			{
				return this._UniqueCode;
			}
			set
			{
				if ((this._UniqueCode != value))
				{
					this.OnUniqueCodeChanging(value);
					this.SendPropertyChanging();
					this._UniqueCode = value;
					this.SendPropertyChanged("UniqueCode");
					this.OnUniqueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetVersionId", DbType="Int NOT NULL")]
		public int BudgetVersionId
		{
			get
			{
				return this._BudgetVersionId;
			}
			set
			{
				if ((this._BudgetVersionId != value))
				{
					this.OnBudgetVersionIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetVersionId = value;
					this.SendPropertyChanged("BudgetVersionId");
					this.OnBudgetVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationUnitId", DbType="Int NOT NULL")]
		public int OrganizationUnitId
		{
			get
			{
				return this._OrganizationUnitId;
			}
			set
			{
				if ((this._OrganizationUnitId != value))
				{
					this.OnOrganizationUnitIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationUnitId = value;
					this.SendPropertyChanged("OrganizationUnitId");
					this.OnOrganizationUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundTypeId", DbType="Int")]
		public System.Nullable<int> FundTypeId
		{
			get
			{
				return this._FundTypeId;
			}
			set
			{
				if ((this._FundTypeId != value))
				{
					this.OnFundTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FundTypeId = value;
					this.SendPropertyChanged("FundTypeId");
					this.OnFundTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenterId", DbType="Int")]
		public System.Nullable<int> CostCenterId
		{
			get
			{
				return this._CostCenterId;
			}
			set
			{
				if ((this._CostCenterId != value))
				{
					this.OnCostCenterIdChanging(value);
					this.SendPropertyChanging();
					this._CostCenterId = value;
					this.SendPropertyChanged("CostCenterId");
					this.OnCostCenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutingCodeId", DbType="Int")]
		public System.Nullable<int> RoutingCodeId
		{
			get
			{
				return this._RoutingCodeId;
			}
			set
			{
				if ((this._RoutingCodeId != value))
				{
					this.OnRoutingCodeIdChanging(value);
					this.SendPropertyChanging();
					this._RoutingCodeId = value;
					this.SendPropertyChanged("RoutingCodeId");
					this.OnRoutingCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Initiative", DbType="NVarChar(MAX)")]
		public string Initiative
		{
			get
			{
				return this._Initiative;
			}
			set
			{
				if ((this._Initiative != value))
				{
					this.OnInitiativeChanging(value);
					this.SendPropertyChanging();
					this._Initiative = value;
					this.SendPropertyChanged("Initiative");
					this.OnInitiativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FedEmployeeCount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FedEmployeeCount
		{
			get
			{
				return this._FedEmployeeCount;
			}
			set
			{
				if ((this._FedEmployeeCount != value))
				{
					this.OnFedEmployeeCountChanging(value);
					this.SendPropertyChanging();
					this._FedEmployeeCount = value;
					this.SendPropertyChanged("FedEmployeeCount");
					this.OnFedEmployeeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ContractorCount
		{
			get
			{
				return this._ContractorCount;
			}
			set
			{
				if ((this._ContractorCount != value))
				{
					this.OnContractorCountChanging(value);
					this.SendPropertyChanging();
					this._ContractorCount = value;
					this.SendPropertyChanged("ContractorCount");
					this.OnContractorCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Impact", DbType="NVarChar(MAX)")]
		public string Impact
		{
			get
			{
				return this._Impact;
			}
			set
			{
				if ((this._Impact != value))
				{
					this.OnImpactChanging(value);
					this.SendPropertyChanging();
					this._Impact = value;
					this.SendPropertyChanged("Impact");
					this.OnImpactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddtionalNote", DbType="NVarChar(MAX)")]
		public string AddtionalNote
		{
			get
			{
				return this._AddtionalNote;
			}
			set
			{
				if ((this._AddtionalNote != value))
				{
					this.OnAddtionalNoteChanging(value);
					this.SendPropertyChanging();
					this._AddtionalNote = value;
					this.SendPropertyChanged("AddtionalNote");
					this.OnAddtionalNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int NOT NULL")]
		public int OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BudgetItem", Storage="_BudgetItems", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<BudgetItem> BudgetItems
		{
			get
			{
				return this._BudgetItems;
			}
			set
			{
				this._BudgetItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BudgetDetail", Storage="_BudgetDetails", ThisKey="Id", OtherKey="BudgetId")]
		public EntitySet<BudgetDetail> BudgetDetails
		{
			get
			{
				return this._BudgetDetails;
			}
			set
			{
				this._BudgetDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BudgetItems(BudgetItem entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_BudgetItems(BudgetItem entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
		
		private void attach_BudgetDetails(BudgetDetail entity)
		{
			this.SendPropertyChanging();
			entity.Budget = this;
		}
		
		private void detach_BudgetDetails(BudgetDetail entity)
		{
			this.SendPropertyChanging();
			entity.Budget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetItem")]
	public partial class BudgetItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _Code;
		
		private int _BudgetId;
		
		private System.Nullable<int> _OCCId;
		
		private System.Nullable<int> _ContractId;
		
		private System.Nullable<int> _ContractTaskOrderId;
		
		private System.Nullable<int> _ProjectTaskCodeId;
		
		private System.Nullable<int> _ExpenseTypeId;
		
		private System.Nullable<bool> _Funded;
		
		private System.Nullable<bool> _ExternalFunding;
		
		private System.Nullable<System.DateTime> _FundingPOPStart;
		
		private System.Nullable<System.DateTime> _FundingPOPEnd;
		
		private System.Nullable<decimal> _ContractorCount;
		
		private System.Nullable<decimal> _FTECount;
		
		private string _SiteLocation;
		
		private string _DutyLocation;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private int _OldId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<int> _FundTypeId;
		
		private System.Nullable<int> _CostCenterId;
		
		private System.Nullable<int> _RoutingCodeId;
		
		private string _Impact;
		
		private string _BLI;
		
		private System.Nullable<bool> _AssociatedContractFee;
		
		private System.Nullable<double> _FeeAmount;
		
		private string _SupportedLOB;
		
		private System.Nullable<double> _ForwardFundingEstimate;
		
		private EntityRef<Budget> _Budget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBudgetIdChanging(int value);
    partial void OnBudgetIdChanged();
    partial void OnOCCIdChanging(System.Nullable<int> value);
    partial void OnOCCIdChanged();
    partial void OnContractIdChanging(System.Nullable<int> value);
    partial void OnContractIdChanged();
    partial void OnContractTaskOrderIdChanging(System.Nullable<int> value);
    partial void OnContractTaskOrderIdChanged();
    partial void OnProjectTaskCodeIdChanging(System.Nullable<int> value);
    partial void OnProjectTaskCodeIdChanged();
    partial void OnExpenseTypeIdChanging(System.Nullable<int> value);
    partial void OnExpenseTypeIdChanged();
    partial void OnFundedChanging(System.Nullable<bool> value);
    partial void OnFundedChanged();
    partial void OnExternalFundingChanging(System.Nullable<bool> value);
    partial void OnExternalFundingChanged();
    partial void OnFundingPOPStartChanging(System.Nullable<System.DateTime> value);
    partial void OnFundingPOPStartChanged();
    partial void OnFundingPOPEndChanging(System.Nullable<System.DateTime> value);
    partial void OnFundingPOPEndChanged();
    partial void OnContractorCountChanging(System.Nullable<decimal> value);
    partial void OnContractorCountChanged();
    partial void OnFTECountChanging(System.Nullable<decimal> value);
    partial void OnFTECountChanged();
    partial void OnSiteLocationChanging(string value);
    partial void OnSiteLocationChanged();
    partial void OnDutyLocationChanging(string value);
    partial void OnDutyLocationChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnOldIdChanging(int value);
    partial void OnOldIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnFundTypeIdChanging(System.Nullable<int> value);
    partial void OnFundTypeIdChanged();
    partial void OnCostCenterIdChanging(System.Nullable<int> value);
    partial void OnCostCenterIdChanged();
    partial void OnRoutingCodeIdChanging(System.Nullable<int> value);
    partial void OnRoutingCodeIdChanged();
    partial void OnImpactChanging(string value);
    partial void OnImpactChanged();
    partial void OnBLIChanging(string value);
    partial void OnBLIChanged();
    partial void OnAssociatedContractFeeChanging(System.Nullable<bool> value);
    partial void OnAssociatedContractFeeChanged();
    partial void OnFeeAmountChanging(System.Nullable<double> value);
    partial void OnFeeAmountChanged();
    partial void OnSupportedLOBChanging(string value);
    partial void OnSupportedLOBChanged();
    partial void OnForwardFundingEstimateChanging(System.Nullable<double> value);
    partial void OnForwardFundingEstimateChanged();
    #endregion
		
		public BudgetItem()
		{
			this._Budget = default(EntityRef<Budget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="Int NOT NULL")]
		public int BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OCCId", DbType="Int")]
		public System.Nullable<int> OCCId
		{
			get
			{
				return this._OCCId;
			}
			set
			{
				if ((this._OCCId != value))
				{
					this.OnOCCIdChanging(value);
					this.SendPropertyChanging();
					this._OCCId = value;
					this.SendPropertyChanged("OCCId");
					this.OnOCCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="Int")]
		public System.Nullable<int> ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractTaskOrderId", DbType="Int")]
		public System.Nullable<int> ContractTaskOrderId
		{
			get
			{
				return this._ContractTaskOrderId;
			}
			set
			{
				if ((this._ContractTaskOrderId != value))
				{
					this.OnContractTaskOrderIdChanging(value);
					this.SendPropertyChanging();
					this._ContractTaskOrderId = value;
					this.SendPropertyChanged("ContractTaskOrderId");
					this.OnContractTaskOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTaskCodeId", DbType="Int")]
		public System.Nullable<int> ProjectTaskCodeId
		{
			get
			{
				return this._ProjectTaskCodeId;
			}
			set
			{
				if ((this._ProjectTaskCodeId != value))
				{
					this.OnProjectTaskCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectTaskCodeId = value;
					this.SendPropertyChanged("ProjectTaskCodeId");
					this.OnProjectTaskCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseTypeId", DbType="Int")]
		public System.Nullable<int> ExpenseTypeId
		{
			get
			{
				return this._ExpenseTypeId;
			}
			set
			{
				if ((this._ExpenseTypeId != value))
				{
					this.OnExpenseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseTypeId = value;
					this.SendPropertyChanged("ExpenseTypeId");
					this.OnExpenseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Funded", DbType="Bit")]
		public System.Nullable<bool> Funded
		{
			get
			{
				return this._Funded;
			}
			set
			{
				if ((this._Funded != value))
				{
					this.OnFundedChanging(value);
					this.SendPropertyChanging();
					this._Funded = value;
					this.SendPropertyChanged("Funded");
					this.OnFundedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalFunding", DbType="Bit")]
		public System.Nullable<bool> ExternalFunding
		{
			get
			{
				return this._ExternalFunding;
			}
			set
			{
				if ((this._ExternalFunding != value))
				{
					this.OnExternalFundingChanging(value);
					this.SendPropertyChanging();
					this._ExternalFunding = value;
					this.SendPropertyChanged("ExternalFunding");
					this.OnExternalFundingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundingPOPStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> FundingPOPStart
		{
			get
			{
				return this._FundingPOPStart;
			}
			set
			{
				if ((this._FundingPOPStart != value))
				{
					this.OnFundingPOPStartChanging(value);
					this.SendPropertyChanging();
					this._FundingPOPStart = value;
					this.SendPropertyChanged("FundingPOPStart");
					this.OnFundingPOPStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundingPOPEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> FundingPOPEnd
		{
			get
			{
				return this._FundingPOPEnd;
			}
			set
			{
				if ((this._FundingPOPEnd != value))
				{
					this.OnFundingPOPEndChanging(value);
					this.SendPropertyChanging();
					this._FundingPOPEnd = value;
					this.SendPropertyChanged("FundingPOPEnd");
					this.OnFundingPOPEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ContractorCount
		{
			get
			{
				return this._ContractorCount;
			}
			set
			{
				if ((this._ContractorCount != value))
				{
					this.OnContractorCountChanging(value);
					this.SendPropertyChanging();
					this._ContractorCount = value;
					this.SendPropertyChanged("ContractorCount");
					this.OnContractorCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTECount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> FTECount
		{
			get
			{
				return this._FTECount;
			}
			set
			{
				if ((this._FTECount != value))
				{
					this.OnFTECountChanging(value);
					this.SendPropertyChanging();
					this._FTECount = value;
					this.SendPropertyChanged("FTECount");
					this.OnFTECountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteLocation", DbType="NVarChar(MAX)")]
		public string SiteLocation
		{
			get
			{
				return this._SiteLocation;
			}
			set
			{
				if ((this._SiteLocation != value))
				{
					this.OnSiteLocationChanging(value);
					this.SendPropertyChanging();
					this._SiteLocation = value;
					this.SendPropertyChanged("SiteLocation");
					this.OnSiteLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DutyLocation", DbType="NVarChar(MAX)")]
		public string DutyLocation
		{
			get
			{
				return this._DutyLocation;
			}
			set
			{
				if ((this._DutyLocation != value))
				{
					this.OnDutyLocationChanging(value);
					this.SendPropertyChanging();
					this._DutyLocation = value;
					this.SendPropertyChanged("DutyLocation");
					this.OnDutyLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int NOT NULL")]
		public int OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundTypeId", DbType="Int")]
		public System.Nullable<int> FundTypeId
		{
			get
			{
				return this._FundTypeId;
			}
			set
			{
				if ((this._FundTypeId != value))
				{
					this.OnFundTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FundTypeId = value;
					this.SendPropertyChanged("FundTypeId");
					this.OnFundTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenterId", DbType="Int")]
		public System.Nullable<int> CostCenterId
		{
			get
			{
				return this._CostCenterId;
			}
			set
			{
				if ((this._CostCenterId != value))
				{
					this.OnCostCenterIdChanging(value);
					this.SendPropertyChanging();
					this._CostCenterId = value;
					this.SendPropertyChanged("CostCenterId");
					this.OnCostCenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoutingCodeId", DbType="Int")]
		public System.Nullable<int> RoutingCodeId
		{
			get
			{
				return this._RoutingCodeId;
			}
			set
			{
				if ((this._RoutingCodeId != value))
				{
					this.OnRoutingCodeIdChanging(value);
					this.SendPropertyChanging();
					this._RoutingCodeId = value;
					this.SendPropertyChanged("RoutingCodeId");
					this.OnRoutingCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Impact", DbType="NVarChar(MAX)")]
		public string Impact
		{
			get
			{
				return this._Impact;
			}
			set
			{
				if ((this._Impact != value))
				{
					this.OnImpactChanging(value);
					this.SendPropertyChanging();
					this._Impact = value;
					this.SendPropertyChanged("Impact");
					this.OnImpactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLI", DbType="NVarChar(MAX)")]
		public string BLI
		{
			get
			{
				return this._BLI;
			}
			set
			{
				if ((this._BLI != value))
				{
					this.OnBLIChanging(value);
					this.SendPropertyChanging();
					this._BLI = value;
					this.SendPropertyChanged("BLI");
					this.OnBLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedContractFee", DbType="Bit")]
		public System.Nullable<bool> AssociatedContractFee
		{
			get
			{
				return this._AssociatedContractFee;
			}
			set
			{
				if ((this._AssociatedContractFee != value))
				{
					this.OnAssociatedContractFeeChanging(value);
					this.SendPropertyChanging();
					this._AssociatedContractFee = value;
					this.SendPropertyChanged("AssociatedContractFee");
					this.OnAssociatedContractFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Float")]
		public System.Nullable<double> FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportedLOB", DbType="NVarChar(MAX)")]
		public string SupportedLOB
		{
			get
			{
				return this._SupportedLOB;
			}
			set
			{
				if ((this._SupportedLOB != value))
				{
					this.OnSupportedLOBChanging(value);
					this.SendPropertyChanging();
					this._SupportedLOB = value;
					this.SendPropertyChanged("SupportedLOB");
					this.OnSupportedLOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForwardFundingEstimate", DbType="Float")]
		public System.Nullable<double> ForwardFundingEstimate
		{
			get
			{
				return this._ForwardFundingEstimate;
			}
			set
			{
				if ((this._ForwardFundingEstimate != value))
				{
					this.OnForwardFundingEstimateChanging(value);
					this.SendPropertyChanging();
					this._ForwardFundingEstimate = value;
					this.SendPropertyChanged("ForwardFundingEstimate");
					this.OnForwardFundingEstimateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BudgetItem", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.BudgetItems.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.BudgetItems.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(int);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetDetail")]
	public partial class BudgetDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BudgetId;
		
		private System.Nullable<int> _OMBId;
		
		private System.Nullable<int> _StrategyId;
		
		private System.Nullable<int> _ProposedOMBId;
		
		private System.Nullable<int> _BudgetItemId;
		
		private System.Nullable<int> _BusinessPlanInitiativeId;
		
		private EntityRef<Budget> _Budget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBudgetIdChanging(int value);
    partial void OnBudgetIdChanged();
    partial void OnOMBIdChanging(System.Nullable<int> value);
    partial void OnOMBIdChanged();
    partial void OnStrategyIdChanging(System.Nullable<int> value);
    partial void OnStrategyIdChanged();
    partial void OnProposedOMBIdChanging(System.Nullable<int> value);
    partial void OnProposedOMBIdChanged();
    partial void OnBudgetItemIdChanging(System.Nullable<int> value);
    partial void OnBudgetItemIdChanged();
    partial void OnBusinessPlanInitiativeIdChanging(System.Nullable<int> value);
    partial void OnBusinessPlanInitiativeIdChanged();
    #endregion
		
		public BudgetDetail()
		{
			this._Budget = default(EntityRef<Budget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetId", DbType="Int NOT NULL")]
		public int BudgetId
		{
			get
			{
				return this._BudgetId;
			}
			set
			{
				if ((this._BudgetId != value))
				{
					if (this._Budget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBudgetIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetId = value;
					this.SendPropertyChanged("BudgetId");
					this.OnBudgetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMBId", DbType="Int")]
		public System.Nullable<int> OMBId
		{
			get
			{
				return this._OMBId;
			}
			set
			{
				if ((this._OMBId != value))
				{
					this.OnOMBIdChanging(value);
					this.SendPropertyChanging();
					this._OMBId = value;
					this.SendPropertyChanged("OMBId");
					this.OnOMBIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrategyId", DbType="Int")]
		public System.Nullable<int> StrategyId
		{
			get
			{
				return this._StrategyId;
			}
			set
			{
				if ((this._StrategyId != value))
				{
					this.OnStrategyIdChanging(value);
					this.SendPropertyChanging();
					this._StrategyId = value;
					this.SendPropertyChanged("StrategyId");
					this.OnStrategyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedOMBId", DbType="Int")]
		public System.Nullable<int> ProposedOMBId
		{
			get
			{
				return this._ProposedOMBId;
			}
			set
			{
				if ((this._ProposedOMBId != value))
				{
					this.OnProposedOMBIdChanging(value);
					this.SendPropertyChanging();
					this._ProposedOMBId = value;
					this.SendPropertyChanged("ProposedOMBId");
					this.OnProposedOMBIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetItemId", DbType="Int")]
		public System.Nullable<int> BudgetItemId
		{
			get
			{
				return this._BudgetItemId;
			}
			set
			{
				if ((this._BudgetItemId != value))
				{
					this.OnBudgetItemIdChanging(value);
					this.SendPropertyChanging();
					this._BudgetItemId = value;
					this.SendPropertyChanged("BudgetItemId");
					this.OnBudgetItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPlanInitiativeId", DbType="Int")]
		public System.Nullable<int> BusinessPlanInitiativeId
		{
			get
			{
				return this._BusinessPlanInitiativeId;
			}
			set
			{
				if ((this._BusinessPlanInitiativeId != value))
				{
					this.OnBusinessPlanInitiativeIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessPlanInitiativeId = value;
					this.SendPropertyChanged("BusinessPlanInitiativeId");
					this.OnBusinessPlanInitiativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budget_BudgetDetail", Storage="_Budget", ThisKey="BudgetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Budget Budget
		{
			get
			{
				return this._Budget.Entity;
			}
			set
			{
				Budget previousValue = this._Budget.Entity;
				if (((previousValue != value) 
							|| (this._Budget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budget.Entity = null;
						previousValue.BudgetDetails.Remove(this);
					}
					this._Budget.Entity = value;
					if ((value != null))
					{
						value.BudgetDetails.Add(this);
						this._BudgetId = value.Id;
					}
					else
					{
						this._BudgetId = default(int);
					}
					this.SendPropertyChanged("Budget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
